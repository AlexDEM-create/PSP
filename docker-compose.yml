version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: fp
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    networks:
      - postgres
    ports:
      - "7432:5432"

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  appeal:
    container_name: appeal
    build:
      context: .
      dockerfile: appeal/webapp/Dockerfile
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=staging
    networks:
      - backend
      - postgres
    depends_on:
      - postgres

  balance:
    container_name: balance
    build:
      context: .
      dockerfile: balance/webapp/Dockerfile
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=staging
    networks:
      - backend
      - postgres
    depends_on:
      - postgres

  card:
    container_name: card
    build:
      context: .
      dockerfile: card/webapp/Dockerfile
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=staging
    networks:
      - backend
      - postgres
    depends_on:
      - postgres

  currency:
    container_name: currency
    build:
      context: .
      dockerfile: currency/webapp/Dockerfile
    ports:
      - "8084:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=staging
    networks:
      - backend
      - postgres
    depends_on:
      - postgres

  merchant:
    container_name: merchant
    build:
      context: .
      dockerfile: merchant/webapp/Dockerfile
    ports:
      - "8085:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=staging
    networks:
      - backend
      - postgres
    depends_on:
      - postgres

  payment:
    container_name: payment
    build:
      context: .
      dockerfile: payment/webapp/Dockerfile
    ports:
      - "8086:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=staging
    networks:
      - backend
      - postgres
    depends_on:
      - postgres

  payment-verification:
    container_name: payment-verification
    build:
      context: .
      dockerfile: payment-verification/webapp/Dockerfile
    ports:
      - "8087:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=staging
    networks:
      - backend
      - postgres
    depends_on:
      - postgres

  terminal:
    container_name: terminal
    build:
      context: .
      dockerfile: terminal/webapp/Dockerfile
    ports:
      - "8088:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=staging
    networks:
      - backend
      - postgres
    depends_on:
      - postgres

  trader-team:
    container_name: trader-team
    build:
      context: .
      dockerfile: trader-team/webapp/Dockerfile
    ports:
      - "8089:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=staging
    networks:
      - backend
      - postgres
    depends_on:
      - postgres

  user:
    container_name: user
    build:
      context: .
      dockerfile: user/webapp/Dockerfile
    ports:
      - "8090:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=staging
    networks:
      - backend
      - postgres
    depends_on:
      - postgres

  receipt-data-extractor:
    container_name: receipt-data-extractor
    build:
      context: ./receipt-data-extractor
      dockerfile: Dockerfile
    ports:
      - "8091:8080"
    networks:
      - backend
      - postgres
    depends_on:
      - postgres

networks:
  postgres:
    driver: bridge
  backend:
    driver: bridge

volumes:
  postgres:
  pgadmin:
